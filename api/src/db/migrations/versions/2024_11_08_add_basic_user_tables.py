"""add basic user tables

Revision ID: 9508f27b03df
Revises: 8b96ade6f6a2
Create Date: 2024-11-08 14:08:59.539396

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "9508f27b03df"
down_revision = "8b96ade6f6a2"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "lk_external_user_type",
        sa.Column("external_user_type_id", sa.Integer(), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("external_user_type_id", name=op.f("lk_external_user_type_pkey")),
        schema="api",
    )
    op.create_table(
        "user",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("user_id", name=op.f("user_pkey")),
        schema="api",
    )
    op.create_table(
        "link_external_user",
        sa.Column("link_external_user_id", sa.UUID(), nullable=False),
        sa.Column("external_user_id", sa.Text(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("external_user_type_id", sa.Integer(), nullable=False),
        sa.Column("email", sa.Text(), nullable=False),
        sa.Column("first_name", sa.Text(), nullable=False),
        sa.Column("last_name", sa.Text(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["external_user_type_id"],
            ["api.lk_external_user_type.external_user_type_id"],
            name=op.f("link_external_user_external_user_type_id_lk_external_user_type_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["api.user.user_id"], name=op.f("link_external_user_user_id_user_fkey")
        ),
        sa.PrimaryKeyConstraint("link_external_user_id", name=op.f("link_external_user_pkey")),
        schema="api",
    )
    op.create_index(
        op.f("link_external_user_external_user_type_id_idx"),
        "link_external_user",
        ["external_user_type_id"],
        unique=False,
        schema="api",
    )
    op.create_index(
        op.f("link_external_user_user_id_idx"),
        "link_external_user",
        ["user_id"],
        unique=False,
        schema="api",
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("link_external_user_user_id_idx"), table_name="link_external_user", schema="api"
    )
    op.drop_index(
        op.f("link_external_user_external_user_type_id_idx"),
        table_name="link_external_user",
        schema="api",
    )
    op.drop_table("link_external_user", schema="api")
    op.drop_table("user", schema="api")
    op.drop_table("lk_external_user_type", schema="api")
    # ### end Alembic commands ###
